{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "vnet-name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The virtual network where this Virtual Machine will be placed"
      }
    },
    "vmSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The subnet where this Virtual Machine will be placed."
      }
    },
    "vmNicNameSuffix": {
      "type": "string"
    },
    "vmNamePrefix": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size or SKU of the Virtual Machine."
      }
    },
    "vmLinuxOSVersion": {
      "type": "string"
    },
    "vmImagePublisher": {
      "type": "string"
    },
    "vmImageOffer": {
      "type": "string"
    },
    "networkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The network resource group name where the virtual network is located."
      }
    }
  },
  "variables": {
    "vmSize": "[parameters('vmSize')]",
    "OSVersion": "[parameters('vmLinuxOSVersion')]",
    "vmPublicIpDnsName": "[concat('portal', uniquestring(resourceGroup().id))]",
    "location": "[resourceGroup().location]",
    "vmImagePublisher": "[parameters('vmImagePublisher')]",
    "vmImageOffer": "[parameters('vmImageOffer')]",
    "vm-subnet-name": "[parameters('vmSubnetName')]",
    "networkResourceGroup": "[parameters('networkResourceGroup')]",
    "nicCount": 1,
    "vmCount": 1,
    "publiIpCount": 1,
    "vmSubnetRef": "[resourceId( variables('networkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnet-name') )]",
    "vmSubnet": "[concat(variables('vmSubnetRef'), '/subnets/', variables('vm-subnet-name'))]",
    "publicIPAddressType": "Dynamic",
    "sshKeyPath": "[concat('/home/',parameters('vmAdminUserName'),'/.ssh/authorized_keys')]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmNamePrefix'), add(copyIndex(),1), '-public-ip')]",
      "location": "[variables('location')]",
      "copy": {
        "name": "publicIpCount",
        "count": "[variables('publiIpCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('vmPublicIpDnsName'), add(copyIndex(),1))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat( parameters('vmNamePrefix'), add(copyIndex(),1), parameters('vmNicNameSuffix'))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicCopy",
        "count": "[variables('nicCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmNamePrefix'), add(copyIndex(),1), '-public-ip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), add(copyIndex(),1), '-public-ip'))]"
              },
              "subnet": {
                "id": "[variables('vmSubnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), add(copyIndex(),1))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "vmCopy",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat( parameters('vmNamePrefix'), add(copyIndex(),1), parameters('vmNicNameSuffix')) )]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), add(copyIndex(),1))]",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[variables('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmNamePrefix'), add(copyIndex(),1), '-OsDisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
          },
            "diskSizeGB": 30,
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( parameters('vmNamePrefix'), add(copyIndex(),1), parameters('vmNicNameSuffix')))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('vmAdminUserName'), '@', variables('vmPublicIpDnsName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    }
  }
}